#define LAYER_MAIN 0
#define LAYER_TESTING 1
#define LAYER_SYMB 2
#define LAYER_FN 3
#define LAYER_NMPAD 4
#define LAYER_MOUSE 5
#define LAYER_NAV 6
#define LAYER_GAME 7

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
behaviors {

    //////////////////////////////////////////////////////////////////////////
    //
    // Miryoku layers and home row mods (ported from my QMK endgame)
    // - https://sunaku.github.io/home-row-mods.html#porting-to-zmk
    // - https://github.com/urob/zmk-config#timeless-homerow-mods
    //
    //////////////////////////////////////////////////////////////////////////

    //
    // HOMEY_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use
    // for the pinky, ring, and middle fingers (which are assigned to Super,
    // Alt, and Ctrl respectively in the Miryoku system) on home row keys.
    //
    #ifndef HOMEY_HOLDING_TYPE
    #define HOMEY_HOLDING_TYPE "tap-preferred"
    #endif

    //
    // HOMEY_HOLDING_TIME defines how long you need to hold (milliseconds)
    // home row mod keys in order to send their modifiers to the computer
    // (i.e. "register" them) for mod-click mouse usage (e.g. Ctrl-Click).
    //
    #ifndef HOMEY_HOLDING_TIME
    #define HOMEY_HOLDING_TIME 270
    #endif

    //
    // HOMEY_STREAK_DECAY defines how long you need to wait (milliseconds)
    // after typing before you can use home row mods again.  It prevents
    // unintended activation of home row mods when you're actively typing.
    //
    #ifndef HOMEY_STREAK_DECAY
    #define HOMEY_STREAK_DECAY 140
    #endif

    //
    // HOMEY_REPEAT_DECAY defines how much time you have left (milliseconds)
    // after tapping a key to hold it again in order to make it auto-repeat.
    //
    #ifndef HOMEY_REPEAT_DECAY
    #define HOMEY_REPEAT_DECAY 300
    #endif

    //
    // SHIFT_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use
    // for index fingers (which Miryoku assigns to Shift) on home row keys.
    //
    // NOTE: The "tap-preferred" flavor of ZMK hold-tap for index finger keys
    // allows faster activation of the Shift modifier (without having to wait
    // for the modified key to be released as the "balanced" flavor requires).
    // Typing streaks and the `hold-trigger-on-release` setting are disabled
    // for the index fingers so as not to hinder their speed and dexterity.
    //
    #ifndef SHIFT_HOLDING_TYPE
    #define SHIFT_HOLDING_TYPE "tap-preferred"
    #endif

    //
    // SHIFT_HOLDING_TIME defines how long you need to hold (milliseconds)
    // index finger keys in order to send their modifiers to the computer
    // (i.e. "register" them) for mod-click mouse usage (e.g. Shift-Click).
    //
    // CAUTION: You'll need to perform inward rolls from pinky->ring->middle
    // fingers toward the index fingers when activating multiple modifiers
    // because `hold-trigger-on-release` is disabled for the index fingers.
    // Otherwise, you may be surprised that the index fingers' modifier is
    // sent immediately without the rest of your multi-mod chord when you
    // perform outward rolls from your index fingers toward your pinkies.
    //
    #ifndef SHIFT_HOLDING_TIME
    #define SHIFT_HOLDING_TIME 200
    #endif

    //
    // SHIFT_STREAK_DECAY defines how long you need to wait (milliseconds)
    // after typing before you can use home row mods again.  It prevents
    // unintended activation of home row mods when you're actively typing.
    //
    #ifndef SHIFT_STREAK_DECAY
    #define SHIFT_STREAK_DECAY 80
    #endif

    //
    // SHIFT_REPEAT_DECAY defines how much time you have left (milliseconds)
    // after tapping a key to hold it again in order to make it auto-repeat.
    //
    #ifndef SHIFT_REPEAT_DECAY
    #define SHIFT_REPEAT_DECAY 300
    #endif

    //
    // THUMB_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use
    // for the thumbs (which are assigned to 6 layers in the Miryoku system).
    //
    // NOTE: The "balanced" flavor of ZMK hold-tap provides instant modifier
    // activation for the symbol layer (if the tapped symbol key is released
    // while the thumb layer key is still held down) for quicker programming.
    //
    #ifndef THUMB_HOLDING_TYPE
    #define THUMB_HOLDING_TYPE "balanced"
    #endif

    //
    // THUMB_HOLDING_TIME defines how long you need to hold (milliseconds)
    // a thumb key to activate a layer.  Shorter holds are treated as taps.
    //
    #ifndef THUMB_HOLDING_TIME
    #define THUMB_HOLDING_TIME 200
    #endif

    //
    // THUMB_REPEAT_DECAY defines how much time you have left (milliseconds)
    // after tapping a key to hold it again in order to make it auto-repeat.
    //
    #ifndef THUMB_REPEAT_DECAY
    #define THUMB_REPEAT_DECAY 300
    #endif

    //
    // SPACE_HOLDING_TIME defines how long you need to hold (milliseconds)
    // the space thumb key to activate.  Shorter holds are treated as taps.
    //
    #ifndef SPACE_HOLDING_TIME
    #define SPACE_HOLDING_TIME 170
    #endif

    //
    // SPACE_REPEAT_DECAY defines how much time you have left (milliseconds)
    // after tapping a key to hold it again in order to make it auto-repeat.
    //
    #ifndef SPACE_REPEAT_DECAY
    #define SPACE_REPEAT_DECAY 200
    #endif

    //
    // Ergodox Wireless key positions index for positional hold-tap
    #define LEFT_HAND_KEYS      \
         1  2  3  4  5  6  7   \
        15 16 17 18 19 20 21    \
        29 30 31 32 33 34       \
        41 42 43 44 45 46 47    \
        55 56 57 58 59          \
    #define RIGHT_HAND_KEYS     \
          8  9 10 11 12 13 14   \
         22 23 24 25 26 27 28   \
            35 36 37 38 39 40   \
         48 49 50 51 52 53 54   \
            60 61 62 63 64

    #define THUMB_KEYS          \
            65 66   67 68       \
        69 70 71   72 73 74     \
              75   76

    //
    // Home row mod-tap keys for all except index fingers
    //
    homey_left: miryoku_home_row_mods_left_hand {
        compatible = "zmk,behavior-hold-tap";
        label = "HOME_ROW_MODS_LEFT_HAND";
        flavor = HOMEY_HOLDING_TYPE;
        hold-trigger-key-positions = <          8  9 10 11 12 13 14   \
         22 23 24 25 26 27 28   \
            35 36 37 38 39 40   \
         48 49 50 51 52 53 54   \
            60 61 62 63 64 \
            65 66   67 68       \
        69 70 71   72 73 74     \
              75   76>;
        hold-trigger-on-release; // wait for other home row mods
        tapping-term-ms = <HOMEY_HOLDING_TIME>;
        quick-tap-ms = <HOMEY_REPEAT_DECAY>;
        require-prior-idle-ms = <HOMEY_STREAK_DECAY>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    homey_right: miryoku_home_row_mods_right_hand {
        compatible = "zmk,behavior-hold-tap";
        label = "HOME_ROW_MODS_RIGHT_HAND";
        flavor = HOMEY_HOLDING_TYPE;
        hold-trigger-key-positions = <         1  2  3  4  5  6  7   \
        15 16 17 18 19 20 21    \
        29 30 31 32 33 34       \
        41 42 43 44 45 46 47    \
        55 56 57 58 59          \
            65 66   67 68       \
        69 70 71   72 73 74     \
              75   76>;
        hold-trigger-on-release; // wait for other home row mods
        tapping-term-ms = <HOMEY_HOLDING_TIME>;
        quick-tap-ms = <HOMEY_REPEAT_DECAY>;
        require-prior-idle-ms = <HOMEY_STREAK_DECAY>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
};

};

/ {
	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
				&sys_off
				&none                   &kp NUMBER_1       &kp NUMBER_2       &kp NUMBER_3             &kp NUMBER_4         &kp NUMBER_5     &none         &none             &kp NUMBER_6 &kp NUMBER_7          &kp NUMBER_8         &kp NUMBER_9        &kp NUMBER_0                &kp MINUS
				&kp TAB                 &kp Q              &kp W              &kp E                    &kp R                &kp T            &kp GRAVE     &kp EQUAL         &kp Y        &kp U                 &kp I                &kp O               &kp P                       &kp BACKSLASH
				&mt LEFT_CONTROL ESCAPE &homey_left LGUI A &homey_left LALT S &homey_left LCTRL D      &homey_left LSHIFT F &kp G                                            &kp H        &homey_right RSHIFT J &homey_right LCTRL K &homey_right RALT L &homey_right LGUI SEMICOLON &kp SINGLE_QUOTE
				&kp LEFT_SHIFT          &kp Z              &kp X              &kp C                    &kp V                &kp B            &kp BACKSPACE &kp DELETE        &kp N        &kp M                 &kp COMMA            &kp PERIOD          &kp SLASH                   &kp RETURN
				&kp F13                 &mo LAYER_MOUSE    &kp LEFT_ALT       &kp LC(LS(LA(LEFT_GUI))) &kp SPACE                                                                          &none                 &none                &kp LEFT_BRACKET    &kp RIGHT_BRACKET           &mo LAYER_FN
				                                                                                                            &kp LEFT_ALT     &none         &kp K_APPLICATION &kp INSERT
				                                                                                       &kp LEFT_SHIFT       &kp LEFT_CONTROL &kp LEFT_ALT  &none             &kp RETURN   &lt LAYER_NAV SPACE
				                                                                                                                             &kp LEFT_GUI  &none
			>;
		};
		layer_1 {
			bindings = <
				&sys_off
				&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6
				&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6
				&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5                           &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6
				&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6
				&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4                                                     &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6
				                                                                 &kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_0 &kp NUMBER_1
				                                                    &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_2 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4
				                                                                              &kp NUMBER_5 &kp NUMBER_5
			>;
		};
		layer_2 {
			bindings = <
				&sys_off
				&none &kp F1        &kp F2           &kp F3               &kp F4                &kp F5         &none  &kp F12    &kp F6            &kp F7         &kp F8       &kp F9          &kp F10 &kp F11
				&none &trans        &kp LS(COMMA)    &kp LS(LEFT_BRACKET) &kp LS(RIGHT_BRACKET) &kp LS(PERIOD) &trans &kp INSERT &kp HOME          &kp PAGE_DOWN  &kp PAGE_UP  &kp END         &trans  &trans
				&none &kp SPACE     &kp EQUAL        &kp LS(NUMBER_9)     &kp LS(NUMBER_0)      &none                            &kp LEFT_ARROW    &kp DOWN_ARROW &kp UP_ARROW &kp RIGHT_ARROW &trans  &trans
				&none &kp LS(MINUS) &kp LS(NUMBER_7) &kp LEFT_BRACKET     &kp RIGHT_BRACKET     &none          &trans &trans     &kp LA(BACKSPACE) &kp BACKSPACE  &kp DELETE   &kp LA(DELETE)  &trans  &trans
				&none &none         &none            &none                &none                                                                    &none          &none        &none           &none   &none
				                                                                                &trans         &trans &none      &none
				                                                          &trans                &trans         &trans &none      &none             &none
				                                                                                               &trans &none
			>;
		};
		layer_3 {
			bindings = <
				&sys_off
				&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none &none &bootloader &none &none   &none   &none   &none   &none
				&out OUT_USB &kp F1       &kp F2       &kp F3       &kp F4       &none &none &none       &none &kp F13 &kp F14 &kp F15 &kp F16 &none
				&out OUT_BLE &kp F5       &kp F6       &kp F7       &kp F8       &none                   &none &kp F17 &kp F18 &kp F19 &kp F20 &none
				&none        &kp F9       &kp F10      &kp F11      &kp F12      &none &none &none       &none &kp F21 &kp F22 &kp F23 &kp F24 &to LAYER_GAME
				&none        &none        &none        &none        &none                                      &none   &none   &none   &none   &none
				                                                                 &none &none &none       &none
				                                                    &none        &none &none &none       &none &none
				                                                                       &none &none
			>;
		};
		layer_4 {
			bindings = <
				&sys_off
				&none   &none     &none        &none          &none        &none &none                &none                &none     &none          &none           &none        &none        &none
				&kp TAB &none     &none        &none          &none        &none &none                &none                &none     &kp NUMBER_7   &kp NUMBER_8    &kp NUMBER_9 &none        &none
				&none   &kp SLASH &kp ASTERISK &kp MINUS      &kp PLUS     &none                                           &none     &kp NUMBER_4   &kp NUMBER_5    &kp NUMBER_6 &kp NUMBER_0 &kp BACKSPACE
				&none   &none     &none        &none          &kp PERIOD   &none &kp C_BRIGHTNESS_DEC &kp C_BRIGHTNESS_INC &none     &kp NUMBER_1   &kp NUMBER_2    &kp NUMBER_3 &none        &none
				&none   &none     &none        &kp LEFT_ARROW &kp UP_ARROW                                                           &kp DOWN_ARROW &kp RIGHT_ARROW &none        &none        &to LAYER_MAIN
				                                                           &none &none                &none                &none
				                                              &none        &none &none                &none                &kp SPACE &none
				                                                                 &kp RETURN           &none
			>;
		};
		layer_5 {
			bindings = <
				&sys_off
				&none &none &none &none &none &none &none &none &none          &none           &none          &none           &none &none
				&none &none &none &none &none &none &none &none &msc SCRL_LEFT &msc SCRL_RIGHT &mmv MOVE_UP   &none           &none &none
				&none &none &none &none &none &none             &msc SCRL_UP   &mmv MOVE_LEFT  &mmv MOVE_DOWN &mmv MOVE_RIGHT &none &none
				&none &none &none &none &none &none &none &none &msc SCRL_DOWN &mkp LCLK       &mkp MCLK      &mkp RCLK       &none &none
				&none &none &none &none &none                                  &none           &none          &none           &none &none
				                              &none &none &none &none
				                        &none &none &none &none &none          &none
				                                    &none &none
			>;
		};
		layer_6 {
			bindings = <
				&sys_off
				&none &kp F1       &kp F2       &kp F3           &kp F4         &kp F5 &none  &kp F12    &kp F6            &kp F7         &kp F8       &kp F9          &kp F10 &kp F11
				&none &none        &none        &none            &none          &none  &trans &kp INSERT &kp HOME          &kp PAGE_DOWN  &kp PAGE_UP  &kp END         &trans  &trans
				&none &kp LEFT_GUI &kp LEFT_ALT &kp LEFT_CONTROL &kp LEFT_SHIFT &none                    &kp LEFT_ARROW    &kp DOWN_ARROW &kp UP_ARROW &kp RIGHT_ARROW &trans  &trans
				&none &none        &none        &none            &none          &none  &trans &trans     &kp LA(BACKSPACE) &kp BACKSPACE  &kp DELETE   &kp LA(DELETE)  &trans  &trans
				&none &none        &none        &none            &none                                                     &none          &none        &none           &none   &none
				                                                                &trans &trans &none      &none
				                                                 &trans         &trans &trans &none      &none             &none
				                                                                       &trans &none
			>;
		};
		layer_7 {
			bindings = <
				&sys_off
				&kp ESCAPE       &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans           &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&kp LEFT_CONTROL &kp A  &kp S  &kp D  &kp F  &trans               &trans &trans &trans &trans &trans &trans
				&trans           &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans           &trans &trans &trans &trans                             &trans &trans &trans &trans &trans
				                                             &trans &trans &trans &trans
				                                      &trans &trans &trans &trans &trans &trans
				                                                    &trans &trans
			>;
		};
	};
};
