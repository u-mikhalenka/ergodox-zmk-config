#define LAYER_MAIN 0
#define LAYER_GAME 1
#define LAYER_NAV 2
#define LAYER_FN 3
#define LAYER_NMPAD 4
#define LAYER_SYS 5
#define LAYER_MIRROR 6

#define HYPER LC(LS(LA(LEFT_GUI)))
#define VM_CAPS &mol LAYER_NAV ESCAPE
#define SYS_OFF &sys_off

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

// Ergodox Wireless key positions index for positional hold-tap

#define LEFT_HAND_KEYS      \
        1  2  3  4  5  6  7     \
        15 16 17 18 19 20 21    \
        29 30 31 32 33 34       \
        41 42 43 44 45 46 47    \
        55 56 57 58 59
#define RIGHT_HAND_KEYS     \
			8  9 10 11 12 13 14   \
		   22 23 24 25 26 27 28   \
			  35 36 37 38 39 40  \
	       48 49 50 51 52 53 54   \
                 60 61 62 63 64
#define THUMB_KEYS          \
               65 66   67 68      \
            69 70 71   72 73 74   \
                  75   76

#define TAP_HOLD(NAME, HOLD, TAP, TRIGGER_KEY_POSITIONS) \
    NAME: NAME { \
        compatible = "zmk,behavior-hold-tap"; \
        flavor = "balanced"; \
        hold-trigger-key-positions = <TRIGGER_KEY_POSITIONS>; \
        hold-trigger-on-release; \
        tapping-term-ms = <200>; \
        quick-tap-ms = <0>; \
        #binding-cells = <2>; \
        bindings = <HOLD>, <TAP>; \
    };
#define TAP_HOLD_LEFT(NAME, HOLD, TAP) \
    TAP_HOLD(NAME, HOLD, TAP, RIGHT_HAND_KEYS THUMB_KEYS)
#define TAP_HOLD_RIGHT(NAME, HOLD, TAP) \
    TAP_HOLD(NAME, HOLD, TAP, LEFT_HAND_KEYS THUMB_KEYS)

#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>;
  };

/ {
    behaviors {
        TAP_HOLD_LEFT(thl, &kp, &kp)
        TAP_HOLD_RIGHT(thr, &kp, &kp)
        TAP_HOLD_LEFT(mol, &mo, &kp)
        TAP_HOLD_RIGHT(mor, &mo, &kp)
    };
    
    combos {
        compatible = "zmk,combos";
        COMBO(combo_backspace, &kp BACKSPACE, 24 25)     // ui: backspace
        COMBO(combo_del,       &kp DELETE, 25 26)        // io: delete
        COMBO(combo_lbrkt,     &kp LEFT_BRACKET, 50 51)  // m,: [
        COMBO(combo_rbrkt,     &kp RIGHT_BRACKET, 51 52) // ,.: ]
        // COMBO(combo_arrow,     &arrow, 50 51)            // m,: =>
        
        // COMBO(combo_lprn,      &kp LS(NUMBER_9), 17 18)  // we: (
        // COMBO(combo_rprn,      &kp LS(NUMBER_0), 18 19)  // er: (
        COMBO(combo_arrow_fn,  &arrow_fn, 44 45)         // cv: () => {};
    };

    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap     &kp EQUAL>
                , <&macro_tap     &kp LS(PERIOD)>
                ;
        };
        arrow_fn: arrow_fn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap     &kp LS(NUMBER_9)>
                , <&macro_tap     &kp LS(NUMBER_0)>
                , <&macro_tap     &kp SPACE>
                , <&macro_tap     &kp EQUAL>
                , <&macro_tap     &kp LS(PERIOD)>
                , <&macro_tap     &kp SPACE>
                , <&macro_tap     &kp LS(LEFT_BRACKET)>
                , <&macro_tap     &kp LS(RIGHT_BRACKET)>
                ;
        };
    };
// &none              &kp NUMBER_1        &kp NUMBER_2        &kp NUMBER_3         &kp NUMBER_4          &kp NUMBER_5         &none            &none              &kp NUMBER_6    &kp NUMBER_7                         &kp NUMBER_8          &kp NUMBER_9         &kp NUMBER_0                 &kp MINUS
    keymap {
        compatible = "zmk,keymap";

        main_layer {
            bindings = <
SYS_OFF
&none              &none         &none         &none         &none         &none   &none          &none       &kp LBRC      &kp LBKT       &kp RBKT      &kp RBRC     &none                &none
&none              &kp Q         &kp W         &kp E         &kp R         &kp T   &none          &none       &kp Y         &kp U          &kp I         &kp O        &kp P                &none
VM_CAPS            &thl LGUI A   &thl LALT S   &thl LCTRL D  &thl LSHFT F  &kp G                              &kp H         &thr RSHIFT J  &thr RCTRL K  &thr LALT L  &thr RGUI SEMICOLON  &kp SINGLE_QUOTE
&mol LAYER_SYS F13 &thl HYPER Z  &kp X         &kp C         &kp V         &kp B   &kp BACKSPACE  &kp DELETE  &kp N         &kp M          &kp COMMA     &kp PERIOD   &thr HYPER SLASH     &mor LAYER_SYS BACKSLASH
&none              &none         &none         &none         &mol LAYER_FN SPACE                                                           &none         &none        &none                &none                &none
                                                                                                      &kp LALT             &kp LSHFT        &kp K_APPLICATION  &kp INSERT
                                                                                &mt LSHFT GRAVE       &mol LAYER_NMPAD TAB  &kp LCTRL        &none              &mor LAYER_NMPAD RETURN    &mor  LAYER_NAV SPACE
                                                                                                                           &kp LGUI         &none
            >;
        };

        game_layer {
            bindings = <
SYS_OFF
&kp ESCAPE  &kp N1        &kp N2               &kp N3        &kp N4           &kp N5        &kp N6    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB     &kp Q         &kp W                &kp E         &kp R            &kp T         &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL   &kp A         &kp S                &kp D         &kp F            &kp G                           &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT   &kp Z         &kp X                &kp C         &kp V            &kp C         &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &sl LAYER_MIRROR     &trans        &kp SPACE                                                &trans  &trans  &trans  &trans  &trans
                                                     &trans  &trans    &trans  &trans
                                          &trans     &trans  &trans    &trans  &trans  &trans
                                                             &trans    &trans
            >;
        };

        nav_layer {
            bindings = <
SYS_OFF
&none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3 &kp NUMBER_4  &kp NUMBER_5      &none      &none   &kp NUMBER_6       &kp NUMBER_7    &kp NUMBER_8   &kp NUMBER_9     &kp NUMBER_0   &kp MINUS
&none   &none         &none         &none        &none         &arrow            &trans     &trans  &kp HOME           &kp PAGE_DOWN   &kp PAGE_UP    &kp END          &kp INSERT     &trans
&trans  &kp LGUI      &kp LALT      &kp LCTRL    &kp LSHFT     &arrow_fn                            &kp LEFT_ARROW     &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &trans         &trans
&none   &kp LC(Z)     &kp LC(X)     &kp LC(C)    &kp LC(V)     &none             &trans     &trans  &kp BACKSPACE      &kp DELETE      &trans         &trans           &trans         &trans
&none   &none         &none         &none        &trans                                                                &trans          &none          &none            &none          &none
                                                                                       &trans  &trans    &trans   &trans
                                                                       &trans          &trans  &trans    &trans   &trans             &trans
                                                                                               &trans    &trans
            >;
        };

        fn_layer {
            bindings = <
&trans
&trans  &trans    &trans        &trans     &trans          &trans  &trans    &trans  &trans   &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans        &trans     &trans          &trans  &trans    &trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &kp LGUI  &kp LEFT_ALT  &kp LCTRL  &kp LSHFT       &trans                    &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &trans    &trans        &trans     &trans          &trans  &trans    &trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans
&trans  &trans    &trans        &trans     &trans                                             &trans  &trans  &trans  &trans  &trans
                                                           &trans  &trans    &trans  &trans
                                           &trans          &trans  &trans    &trans  &trans   &trans
                                                                   &trans    &trans
            >;
        };

        num_pad_layer {
            bindings = <
SYS_OFF
&none     &none      &none         &none           &none          &none  &none    &none  &kp LBRC   &kp LBKT  &kp RBKT  &kp RBRC  &none     &none
&none     &none      &none         &none           &none          &none  &none    &none  &kp EQUAL  &kp N7    &kp N8    &kp N9    &kp EXCL  &kp GT
&none     &kp LGUI   &kp LEFT_ALT  &kp LCTRL       &kp LSHFT      &none                  &kp MINUS  &kp N4    &kp N5    &kp N6    &trans    &trans
&none     &none      &none         &none           &none          &none  &none    &none  &kp N0     &kp N1    &kp N2    &kp N3    &trans    &trans
&none     &none      &none         &none           &none                                            &trans    &trans    &trans    &trans    &trans
                                                                                       &trans  &trans    &trans   &trans
                                                                       &trans          &trans  &trans    &trans   &trans             &trans
                                                                                               &trans    &trans
            >;
        };

        sys_layer {
            bindings = <
SYS_OFF
&none           &none         &none         &none         &none          &none                 &bootloader    &bootloader  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &out OUT_USB
&none           &none         &kp C_MUTE    &kp C_VOL_UP  &kp C_VOL_DN   &none                 &none          &none        &none           &none         &none         &none         &none          &out OUT_BLE
&none           &none         &kp C_PREV    &kp C_PP      &kp C_NEXT     &to LAYER_GAME                                    &none           &none         &none         &none         &none          &bt BT_CLR
&none           &none         &none         &none         &none          &to LAYER_MAIN        &none          &none        &none           &none         &none         &none         &none          &bt BT_CLR_ALL
&none           &none         &none         &none         &none                                                            &none         &none         &none         &none          &none
                                                                        &none  &none          &none        &none
                                                          &none         &none  &none          &none        &none  &none
                                                                               &none          &none
            >;
        };

        mirror_layer {
            bindings = <
SYS_OFF
&kp MINUS         &kp N0         &kp N9      &kp N8     &kp N7  &kp N6  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp BACKSLASH     &kp P          &kp O       &kp I      &kp U   &kp Y   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp SINGLE_QUOTE  &kp SEMICOLON  &kp L       &kp K      &kp J   &kp H                     &trans  &trans  &trans  &trans  &trans  &trans
&kp RETURN        &kp SLASH      &kp PERIOD  &kp COMMA  &kp M   &kp N   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans         &trans      &trans     &trans                                    &trans  &trans  &trans  &trans  &trans
                                                                &trans  &trans    &trans  &trans
                                                        &trans  &trans  &trans    &trans  &trans  &trans
                                                                        &trans    &trans
            >;
        };
    };
};