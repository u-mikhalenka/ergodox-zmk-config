#define LAYER_MAIN 0
#define LAYER_GAME 1
#define LAYER_NAV 2
#define LAYER_FN 3
#define LAYER_NMPAD 4
#define LAYER_NMPAD_R 5
#define LAYER_SYS 6
#define LAYER_MIRROR 7

#define HYPER LC(LS(LA(LEFT_GUI)))
#define VM_CAPS &lt LAYER_NAV ESCAPE

#define LAYER_BASE_L1                &kp LS(NUMBER_4)   &kp NUMBER_1           &kp NUMBER_2          &kp NUMBER_3          &kp NUMBER_4                  &kp NUMBER_5                  &none
#define LAYER_BASE_L2                &none              &kp Q                  &homey_left HYPER W   &kp E                 &kp R                         &kp T                         &none
#define LAYER_BASE_L3                VM_CAPS            &homey_left LGUI A     &homey_left LALT S    &homey_left LCTRL D   &homey_left LSHIFT F          &kp G                         
#define LAYER_BASE_L4                &lt LAYER_SYS F13  &kp Z                  &kp X                 &kp C                 &kp V                         &kp B                         &kp DELETE
#define LAYER_BASE_R1 &none          &kp NUMBER_6       &kp NUMBER_7           &kp NUMBER_8          &kp NUMBER_9          &kp NUMBER_0                  &kp MINUS
#define LAYER_BASE_R2 &kp EQUAL      &kp Y              &kp U                  &kp I                 &kp O                 &kp P                         &kp BACKSLASH
#define LAYER_BASE_R3                &kp H              &homey_right RSHIFT J  &homey_right RCTRL K  &homey_right LALT L   &homey_right RGUI SEMICOLON   &kp SINGLE_QUOTE
#define LAYER_BASE_R4 &kp BACKSPACE  &kp N              &homey_right HYPER M   &kp COMMA             &kp PERIOD            &kp SLASH                     &kp BACKSPACE

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

// Ergodox Wireless key positions index for positional hold-tap

#define LEFT_HAND_KEYS      \
        1  2  3  4  5  6  7     \
        15 16 17 18 19 20 21    \
        29 30 31 32 33 34       \
        41 42 43 44 45 46 47    \
        55 56 57 58 59
#define RIGHT_HAND_KEYS     \
			8  9 10 11 12 13 14   \
		22 23 24 25 26 27 28   \
				35 36 37 38 39 40  \
		48 49 50 51 52 53 54   \
				60 61 62 63 64
#define THUMB_KEYS          \
               65 66   67 68      \
          69 70 71   72 73 74   \
                      75   76

#define TAP_HOLD(NAME, HOLD, TAP, TRIGGER_KEY_POSITIONS) \
    NAME: NAME { \
        compatible = "zmk,behavior-hold-tap"; \
        label = "NAME"; \
        flavor = "tap-preferred"; \
        hold-trigger-key-positions = <TRIGGER_KEY_POSITIONS>; \
        hold-trigger-on-release; \
        tapping-term-ms = <200>; \
        quick-tap-ms = <0>; \
        require-prior-idle-ms = <140>; \
        #binding-cells = <2>; \
        bindings = <HOLD>, <TAP>; \
    };
#define TAP_HOLD_LEFT(NAME, HOLD, TAP) \
    TAP_HOLD(NAME, HOLD, TAP, RIGHT_HAND_KEYS THUMB_KEYS)
#define TAP_HOLD_RIGHT(NAME, HOLD, TAP) \
    TAP_HOLD(NAME, HOLD, TAP, LEFT_HAND_KEYS THUMB_KEYS)

/ {
    behaviors {
        TAP_HOLD_LEFT(homey_left, &kp, &kp)
        TAP_HOLD_RIGHT(homey_right, &kp, &kp)

        ctrl_macro: ctrl_macro {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_param_1to1>, <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_release &kp LCTRL>
                ;
        };

        TAP_HOLD_LEFT(ctrl_ht, &ctrl_macro, &kp)
    };

    keymap {
        compatible = "zmk,keymap";

        main_layer {
            bindings = <
&sys_off
&kp LS(NUMBER_4)   &kp NUMBER_1        &kp NUMBER_2        &kp NUMBER_3         &kp NUMBER_4          &kp NUMBER_5         &none            &none              &kp NUMBER_6    &kp NUMBER_7                         &kp NUMBER_8          &kp NUMBER_9         &kp NUMBER_0                 &kp MINUS
&none              &kp Q               &homey_left HYPER W &kp E                &kp R                 &kp T                &none            &kp EQUAL          &kp Y           &kp U                                &kp I                 &kp O                &kp P                        &kp BACKSLASH
VM_CAPS            &homey_left LGUI A  &homey_left LALT S  &homey_left LCTRL D  &homey_left LSHIFT F  &kp G                                                    &kp H           &homey_right RSHIFT J                &homey_right RCTRL K  &homey_right LALT L  &homey_right RGUI SEMICOLON  &kp SINGLE_QUOTE
&lt LAYER_SYS F13  &kp Z               &kp X               &kp C                &kp V                 &kp B                &kp DELETE       &kp BACKSPACE      &kp N           &homey_right HYPER M                 &kp COMMA             &kp PERIOD           &kp SLASH                    &kp BACKSPACE
&none              &none               &none               &none                &lt LAYER_FN SPACE                                                                             &none                                &kp LEFT_BRACKET      &kp RIGHT_BRACKET    &none                        &lt LAYER_SYS F13
                                                                                                      &kp LEFT_ALT         &none            &kp K_APPLICATION  &kp INSERT
                                                                                &mt LEFT_SHIFT GRAVE  &lt LAYER_NMPAD TAB  &kp LEFT_ALT     &none              &lt LAYER_NMPAD_R RETURN    &lt  LAYER_NAV SPACE
                                                                                                                           &kp LEFT_GUI     &none
            >;
        };

        game_layer {
            bindings = <
&sys_off
&kp ESCAPE        &kp NUMBER_1  &kp NUMBER_2         &kp NUMBER_3  &kp NUMBER_4     &kp NUMBER_5  &kp N6    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB           &kp Q         &kp W                &kp E         &kp R            &kp T         &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &kp A         &kp S                &kp D         &kp F            &kp G                           &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT    &kp Z         &kp X                &kp C         &kp V            &kp C         &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans        &sl LAYER_MIRROR     &trans        &kp SPACE                                                &trans  &trans  &trans  &trans  &trans
                                                     &trans  &trans    &trans  &trans
                                          &trans     &trans  &trans    &trans  &trans  &trans
                                                             &trans    &trans
            >;
        };

        nav_layer {
            bindings = <
&sys_off
&none                    &kp NUMBER_1        &kp NUMBER_2           &kp NUMBER_3                        &kp NUMBER_4                            &kp NUMBER_5      &none            &none              &kp NUMBER_6       &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9     &kp NUMBER_0   &kp MINUS
&none                    &none               &kp LS(COMMA)          &kp LS(NUMBER_9)                    &kp LS(NUMBER_0)                        &kp LS(PERIOD)    &trans           &trans             &kp HOME           &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &kp INSERT     &trans
&trans                   &kp LEFT_GUI        &homey_left LALT EQUAL &homey_left LCTRL LEFT_BRACKET      &homey_left LSHIFT RIGHT_BRACKET        &none                                                 &kp LEFT_ARROW     &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans         &trans
&none                    &kp LC(Z)           &kp LC(X)              &homey_left LC(C) LS(LEFT_BRACKET)  &ctrl_ht V LS(RIGHT_BRACKET)      &none             &trans           &trans             &kp BACKSPACE      &kp DELETE      &trans        &trans           &trans         &trans
&none                    &none               &none                  &none                          &trans                                                              &trans             &none              &none           &none         &none
                                                                                       &trans  &trans    &trans   &trans
                                                                       &trans          &trans  &trans    &trans   &trans             &trans
                                                                                               &trans    &trans
            >;
        };

        fn_layer {
            bindings = <
&trans
&trans  &trans    &trans        &trans     &trans          &trans  &trans    &trans  &trans   &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans        &trans     &trans          &trans  &trans    &trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &kp LGUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans                    &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &trans    &trans        &trans     &trans          &trans  &trans    &trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans
&trans  &trans    &trans        &trans     &trans                                             &trans  &trans  &trans  &trans  &trans
                                                           &trans  &trans    &trans  &trans
                                           &trans          &trans  &trans    &trans  &trans   &trans
                                                                   &trans    &trans
            >;
        };

        num_pad_layer {
            bindings = <
&sys_off
&none     &none      &none         &none           &none          &none  &none                   &none                 &none        &none           &none            &none         &none         &none
&kp TAB   &none      &none         &none           &none          &none  &none                   &none                 &kp EQUAL    &kp NUMBER_7    &kp NUMBER_8     &kp NUMBER_9  &none         &none
&none     &kp LGUI   &kp LEFT_ALT  &kp LCTRL       &kp LEFT_SHIFT &none                                                &kp MINUS    &kp NUMBER_4    &kp NUMBER_5     &kp NUMBER_6  &none         &none
&none     &none      &none         &none           &none          &none  &none                   &none                 &kp NUMBER_0 &kp NUMBER_1    &kp NUMBER_2     &kp NUMBER_3  &none         &none
&none     &none      &none         &none           &none                                                                            &none           &none            &none         &none         &to LAYER_MAIN
                                                                 &none  &none                   &none                 &none
                                                   &none         &none  &none                   &none                 &kp SPACE  &none
                                                                        &kp RETURN              &none
            >;
        };

        num_pad_right_layer {
            bindings = <
&sys_off
&none &none &kp N7 &kp N8 &kp N9     &kp EQUAL &none    &none &none &none      &none     &none    &none    &none
&none &none &kp N4 &kp N5 &kp N6     &kp MINUS &none    &none &none &none      &none     &none    &none    &none
&none &none &kp N1 &kp N2 &kp N3     &kp N0                   &none &kp RSHIFT &kp RCTRL &kp LALT &kp RGUI &none
&none &none &none  &none  &kp PERIOD &none     &none    &none &none &trans     &trans    &trans   &trans   &trans
&none &none &none  &none  &none                                     &none      &none     &none    &none    &none
                                   &trans  &trans          &trans        &trans
                    &trans         &trans  &trans          &trans        &trans  &trans
                                           &trans          &trans
            >;
        };

        sys_layer {
            bindings = <
&sys_off
&none           &none         &none         &none         &none          &none                 &bootloader    &bootloader  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &out OUT_USB
&none           &kp C_MUTE    &kp C_VOL_UP  &kp C_VOL_DN  &none          &none                 &none          &none        &none           &none         &none         &none         &none          &out OUT_BLE
&none           &kp C_PREV    &kp C_PP      &kp C_NEXT    &none          &to LAYER_GAME                                    &none           &none         &none         &none         &none          &bt BT_CLR
&none           &none         &none         &none         &none          &to LAYER_MAIN        &none          &none        &none           &none         &none         &none         &none          &bt BT_CLR_ALL
&none           &none         &none         &none         &none                                                            &none         &none         &none         &none          &none
                                                                        &none  &none          &none        &none
                                                          &none         &none  &none          &none        &none  &none
                                                                               &none          &none
            >;
        };

        mirror_layer {
            bindings = <
&sys_off
&kp MINUS         &kp N0         &kp N9      &kp N8     &kp N7  &kp N6  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp BACKSLASH     &kp P          &kp O       &kp I      &kp U   &kp Y   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp SINGLE_QUOTE  &kp SEMICOLON  &kp L       &kp K      &kp J   &kp H                     &trans  &trans  &trans  &trans  &trans  &trans
&kp RETURN        &kp SLASH      &kp PERIOD  &kp COMMA  &kp M   &kp N   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans         &trans      &trans     &trans                                    &trans  &trans  &trans  &trans  &trans
                                                                &trans  &trans    &trans  &trans
                                                        &trans  &trans  &trans    &trans  &trans  &trans
                                                                        &trans    &trans
            >;
        };
    };
};