#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        thl: thl {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            hold-trigger-key-positions = <8 9 10 11 12 13 14 22 23 24 25 26 27 28 35 36 37 38 39 40 48 49 50 51 52 53 54 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <0>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        thr: thr {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            hold-trigger-key-positions = <1 2 3 4 5 6 7 15 16 17 18 19 20 21 29 30 31 32 33 34 41 42 43 44 45 46 47 55 56 57 58 59 65 66 67 68 69 70 71 72 73 74 75 76>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <0>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        mol: mol {
            compatible = "zmk,behavior-hold-tap";
            flavor = "hold-preferred";
            hold-trigger-key-positions = <8 9 10 11 12 13 14 22 23 24 25 26 27 28 35 36 37 38 39 40 48 49 50 51 52 53 54 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76>;
            hold-trigger-on-release;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;
        };

        mor: mor {
            compatible = "zmk,behavior-hold-tap";
            flavor = "hold-preferred";
            hold-trigger-key-positions = <1 2 3 4 5 6 7 15 16 17 18 19 20 21 29 30 31 32 33 34 41 42 43 44 45 46 47 55 56 57 58 59 65 66 67 68 69 70 71 72 73 74 75 76>;
            hold-trigger-on-release;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <24 25>;
            require-prior-idle-ms = <50>;
        };

        combo_del {
            bindings = <&kp DELETE>;
            key-positions = <25 26>;
            require-prior-idle-ms = <50>;
        };

        combo_lbrkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <50 51>;
            require-prior-idle-ms = <50>;
        };

        combo_rbrkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <51 52>;
            require-prior-idle-ms = <50>;
        };

        combo_arrow_fn {
            bindings = <&arrow_fn>;
            key-positions = <44 45>;
            require-prior-idle-ms = <50>;
        };
    };

    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_tap>,
                <&kp LS(PERIOD)>;
        };

        arrow_fn: arrow_fn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LS(NUMBER_9)>,
                <&macro_tap>,
                <&kp LS(NUMBER_0)>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_tap>,
                <&kp LS(PERIOD)>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_tap>,
                <&kp LS(LEFT_BRACKET)>,
                <&macro_tap>,
                <&kp LS(RIGHT_BRACKET)>;
        };
    };

    // &none              &kp NUMBER_1        &kp NUMBER_2        &kp NUMBER_3         &kp NUMBER_4          &kp NUMBER_5         &none            &none              &kp NUMBER_6    &kp NUMBER_7                         &kp NUMBER_8          &kp NUMBER_9         &kp NUMBER_0                 &kp MINUS

    keymap {
        compatible = "zmk,keymap";

        main_layer {
            bindings = <
&sys_off
&kp GRAVE      &kp N1                       &kp N2                &kp N3        &kp N4        &kp N5      &none         &none          &kp N6        &kp N7         &kp N8        &kp N9       &kp N0                           &kp EQUAL
&kp TAB        &kp Q                        &kp W                 &kp E         &kp R         &kp T       &none         &none          &kp Y         &kp U          &kp I         &kp O        &kp P                            &kp MINUS
&mol 2 ESCAPE  &thl LGUI A                  &thl LALT S           &thl LCTRL D  &thl LSHFT F  &kp G                                    &kp H         &thr RSHIFT J  &thr RCTRL K  &thr LALT L  &thr RGUI SEMICOLON              &kp SINGLE_QUOTE
&mol 5 F13     &thl LC(LS(LA(LEFT_GUI))) Z  &kp X                 &kp C         &kp V         &kp B       &kp DELETE    &kp BACKSPACE  &kp N         &kp M          &kp COMMA     &kp PERIOD   &thr LC(LS(LA(LEFT_GUI))) SLASH  &mor 5 BACKSLASH
&mol 5 F13     &none                        &kp LC(LS(LA(LGUI)))  &none         &mol 3 SPACE                                                         &none          &kp LBKT      &kp RBKT     &none                            &mor 5 F13
                                                                                              &none       &none         &kp K_APP      &none
                                                                                &kp LSHIFT    &mol 4 TAB  &none         &none          &mor 3 ENTER  &mor 2 SPACE
                                                                                                          &none         &none
            >;
        };

        game_layer {
            bindings = <
&sys_off
&kp ESCAPE  &kp N1  &kp N2  &kp N3  &kp N4          &kp N5     &kp N6      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB     &kp Q   &kp W   &kp E   &kp R           &kp T      &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL   &kp A   &kp S   &kp D   &kp F           &kp G                          &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT   &kp Z   &kp X   &kp C   &kp V           &kp B      &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &none   &sl 6   &kp SPACE                                              &trans  &trans  &trans  &trans  &trans
                                                    &kp LALT   &trans      &trans  &trans
                                    &kp LEFT_SHIFT  &kp LCTRL  &trans      &trans  &trans  &trans
                                                               &kp LCMD    &trans
            >;
        };

        nav_layer {
            bindings = <
&sys_off
&trans    &kp SPACE  &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &trans    &trans  &trans          &trans          &trans        &trans           &trans      &trans
&trans    &kp EQUAL  &kp LBKT       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp RBKT          &trans    &trans  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &kp INSERT  &trans
&trans    &kp LGUI   &kp LALT       &kp LCTRL             &kp LSHFT              &arrow_fn                           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans      &trans
&trans    &kp LC(Z)  &kp LC(X)      &kp LC(C)             &kp LC(V)              &kp LS(N4)        &trans    &trans  &kp BACKSPACE   &kp DELETE      &trans        &trans           &trans      &trans
&trans    &trans     &trans         &trans                &trans                                                                     &trans          &trans        &trans           &trans      &trans
                                                                                 &trans            &trans    &trans  &trans
                                                          &trans                 &trans            &trans    &trans  &trans          &trans
                                                                                                   &trans    &trans
            >;
        };

        fn_layer {
            bindings = <
&none
&none  &none       &none   &none   &none   &none    &none    &none  &none  &none      &none      &none     &none     &none
&none  &kp INSERT  &kp F9  &kp F8  &kp F7  &kp F12  &none    &none  &none  &none      &none      &none     &none     &none
&none  &kp K_APP   &kp F6  &kp F5  &kp F4  &kp F11                  &none  &kp RSHFT  &kp RCTRL  &kp LALT  &kp RGUI  &none
&none  &none       &kp F3  &kp F2  &kp F1  &kp F10  &none    &none  &none  &none      &none      &none     &none     &none
&none  &none       &none   &none   &none                                   &none      &none      &none     &none     &none
                                           &none    &none    &none  &none
                                   &none   &none    &none    &none  &none  &none
                                                    &none    &none
            >;
        };

        num_pad_layer {
            bindings = <
&sys_off
&none     &none     &none         &none      &none      &none   &none     &none   &none      &none   &none   &none   &none     &none
&none     &none     &none         &none      &none      &none   &none     &none   &kp EQUAL  &kp N7  &kp N8  &kp N9  &kp EXCL  &kp GT
&none     &kp LGUI  &kp LEFT_ALT  &kp LCTRL  &kp LSHFT  &none                     &kp MINUS  &kp N4  &kp N5  &kp N6  &trans    &trans
&none     &none     &none         &none      &none      &none   &none     &none   &kp N0     &kp N1  &kp N2  &kp N3  &trans    &trans
&none     &none     &none         &none      &none                                           &trans  &trans  &trans  &trans    &trans
                                                        &trans  &trans    &trans  &trans
                                             &trans     &trans  &trans    &trans  &trans     &trans
                                                                &trans    &trans
            >;
        };

        sys_layer {
            bindings = <
&sys_off
&none     &none  &none       &none         &none         &none  &bootloader    &bootloader     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &out OUT_USB
&none     &none  &kp C_MUTE  &kp C_VOL_UP  &kp C_VOL_DN  &none  &none          &bt BT_CLR      &none         &none         &none         &none         &none         &out OUT_BLE
&none     &none  &kp C_PREV  &kp C_PP      &kp C_NEXT    &to 1                                 &none         &none         &none         &none         &none         &none
&none     &none  &none       &none         &none         &to 0  &none          &bt BT_CLR_ALL  &none         &none         &none         &none         &none         &none
&none     &none  &none       &none         &none                                                             &none         &none         &none         &none         &none
                                                         &none  &none          &none           &none
                                           &none         &none  &none          &none           &none         &none
                                                                &none          &none
            >;
        };

        mirror_layer {
            bindings = <
&sys_off
&kp MINUS         &kp N0         &kp N9      &kp N8     &kp N7  &kp N6  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp BACKSLASH     &kp P          &kp O       &kp I      &kp U   &kp Y   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp SINGLE_QUOTE  &kp SEMICOLON  &kp L       &kp K      &kp J   &kp H                     &trans  &trans  &trans  &trans  &trans  &trans
&kp RETURN        &kp SLASH      &kp PERIOD  &kp COMMA  &kp M   &kp N   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans         &trans      &trans     &trans                                    &trans  &trans  &trans  &trans  &trans
                                                                &trans  &trans    &trans  &trans
                                                        &trans  &trans  &trans    &trans  &trans  &trans
                                                                        &trans    &trans
            >;
        };
    };
};
